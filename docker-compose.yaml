services:
  broker:
    image: bitnami/kafka:latest
    hostname: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_CFG_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5


  db:
    image: postgres:alpine3.22
    hostname: pgdb
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wallet
    ports:
      - "5432:5432"
    volumes: 
      - ./migrations:/docker-entrypoint-initdb.d
  
  frontend:
    hostname: fiber_server
    build:
      dockerfile: ./internal/frontend/Dockerfile
    ports:
      - "8080:8080"
    depends_on: 
      - broker
      - db
    env_file:
      - ./internal/frontend/.env

  worker:
    build:
      dockerfile: ./internal/worker/Dockerfile
    depends_on:
      - broker
      - db
    env_file:
      - ./internal/worker/.env
